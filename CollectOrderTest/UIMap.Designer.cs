// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 14.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace PayMoneySirTest
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// EmployeeGoodInput - Use 'EmployeeGoodInputParams' to pass parameters into this method.
        /// </summary>
        public void EmployeeGoodInput()
        {
            #region Variable Declarations
            WinEdit uIEmployeeIdEdit = this.UIEmployeeWindow.UIEmployeeIdWindow.UIEmployeeIdEdit;
            WinEdit uIFirstNameEdit = this.UIEmployeeWindow.UIFirstNameWindow.UIFirstNameEdit;
            WinEdit uILastNameEdit = this.UIEmployeeWindow.UILastNameWindow.UILastNameEdit;
            WinComboBox uIDeliveryMethodComboBox = this.UIEmployeeWindow.UIDeliveryMethodWindow.UIDeliveryMethodComboBox;
            WinButton uICreateButton = this.UIEmployeeWindow.UICreateWindow.UICreateButton;
            WinButton uIOKButton = this.UIOKWindow.UIOKButton;
            #endregion

            // Type '333' in 'employeeId' text box
            uIEmployeeIdEdit.Text = this.EmployeeGoodInputParams.UIEmployeeIdEditText1;

            // Type 'Anna' in 'firstName' text box
            uIFirstNameEdit.Text = this.EmployeeGoodInputParams.UIFirstNameEditText1;

            // Type 'Volkova' in 'lastName' text box
            uILastNameEdit.Text = this.EmployeeGoodInputParams.UILastNameEditText1;

            // Select 'Cargo' in 'deliveryMethod' combo box
            uIDeliveryMethodComboBox.SelectedItem = this.EmployeeGoodInputParams.UIDeliveryMethodComboBoxSelectedItem1;

            // Click 'Create' button
            Mouse.Click(uICreateButton, new Point(30, 9));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(12, 8));
        }
        
        #region Properties
        public virtual EmployeeGoodInputParams EmployeeGoodInputParams
        {
            get
            {
                if ((this.mEmployeeGoodInputParams == null))
                {
                    this.mEmployeeGoodInputParams = new EmployeeGoodInputParams();
                }
                return this.mEmployeeGoodInputParams;
            }
        }
        
        public UIEmployeeWindow UIEmployeeWindow
        {
            get
            {
                if ((this.mUIEmployeeWindow == null))
                {
                    this.mUIEmployeeWindow = new UIEmployeeWindow();
                }
                return this.mUIEmployeeWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow();
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private EmployeeGoodInputParams mEmployeeGoodInputParams;
        
        private UIEmployeeWindow mUIEmployeeWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EmployeeGoodInput'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class EmployeeGoodInputParams
    {
        
        #region Fields
        /// <summary>
        /// Type '333' in 'employeeId' text box
        /// </summary>
        public string UIEmployeeIdEditText1 = "333";
        
        /// <summary>
        /// Type 'Anna' in 'firstName' text box
        /// </summary>
        public string UIFirstNameEditText1 = "Anna";
        
        /// <summary>
        /// Type 'Volkova' in 'lastName' text box
        /// </summary>
        public string UILastNameEditText1 = "Volkova";
        
        /// <summary>
        /// Select 'Cargo' in 'deliveryMethod' combo box
        /// </summary>
        public string UIDeliveryMethodComboBoxSelectedItem1 = "Cargo";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeWindow : WinWindow
    {
        
        public UIEmployeeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Employee";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public UIEmployeeIdWindow UIEmployeeIdWindow
        {
            get
            {
                if ((this.mUIEmployeeIdWindow == null))
                {
                    this.mUIEmployeeIdWindow = new UIEmployeeIdWindow(this);
                }
                return this.mUIEmployeeIdWindow;
            }
        }
        
        public UIFirstNameWindow UIFirstNameWindow
        {
            get
            {
                if ((this.mUIFirstNameWindow == null))
                {
                    this.mUIFirstNameWindow = new UIFirstNameWindow(this);
                }
                return this.mUIFirstNameWindow;
            }
        }
        
        public UILastNameWindow UILastNameWindow
        {
            get
            {
                if ((this.mUILastNameWindow == null))
                {
                    this.mUILastNameWindow = new UILastNameWindow(this);
                }
                return this.mUILastNameWindow;
            }
        }
        
        public UIDeliveryMethodWindow UIDeliveryMethodWindow
        {
            get
            {
                if ((this.mUIDeliveryMethodWindow == null))
                {
                    this.mUIDeliveryMethodWindow = new UIDeliveryMethodWindow(this);
                }
                return this.mUIDeliveryMethodWindow;
            }
        }
        
        public UICreateWindow UICreateWindow
        {
            get
            {
                if ((this.mUICreateWindow == null))
                {
                    this.mUICreateWindow = new UICreateWindow(this);
                }
                return this.mUICreateWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIEmployeeIdWindow mUIEmployeeIdWindow;
        
        private UIFirstNameWindow mUIFirstNameWindow;
        
        private UILastNameWindow mUILastNameWindow;
        
        private UIDeliveryMethodWindow mUIDeliveryMethodWindow;
        
        private UICreateWindow mUICreateWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIEmployeeIdWindow : WinWindow
    {
        
        public UIEmployeeIdWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "employeeId";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public WinEdit UIEmployeeIdEdit
        {
            get
            {
                if ((this.mUIEmployeeIdEdit == null))
                {
                    this.mUIEmployeeIdEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEmployeeIdEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIEmployeeIdEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIEmployeeIdEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIFirstNameWindow : WinWindow
    {
        
        public UIFirstNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "firstName";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public WinEdit UIFirstNameEdit
        {
            get
            {
                if ((this.mUIFirstNameEdit == null))
                {
                    this.mUIFirstNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIFirstNameEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIFirstNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIFirstNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UILastNameWindow : WinWindow
    {
        
        public UILastNameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "lastName";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public WinEdit UILastNameEdit
        {
            get
            {
                if ((this.mUILastNameEdit == null))
                {
                    this.mUILastNameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUILastNameEdit.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUILastNameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUILastNameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIDeliveryMethodWindow : WinWindow
    {
        
        public UIDeliveryMethodWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "deliveryMethod";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIDeliveryMethodComboBox
        {
            get
            {
                if ((this.mUIDeliveryMethodComboBox == null))
                {
                    this.mUIDeliveryMethodComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIDeliveryMethodComboBox.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUIDeliveryMethodComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIDeliveryMethodComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UICreateWindow : WinWindow
    {
        
        public UICreateWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "createButton";
            this.WindowTitles.Add("Employee");
            #endregion
        }
        
        #region Properties
        public WinButton UICreateButton
        {
            get
            {
                if ((this.mUICreateButton == null))
                {
                    this.mUICreateButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICreateButton.SearchProperties[WinButton.PropertyNames.Name] = "Create";
                    this.mUICreateButton.WindowTitles.Add("Employee");
                    #endregion
                }
                return this.mUICreateButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICreateButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "14.0.23107.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "OK";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Button";
            this.WindowTitles.Add("OK");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("OK");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
}
